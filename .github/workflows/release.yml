name: Build & Release Gem
on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: "Release type"
        required: true
        default: "patch"
        type: choice
        options:
          - "patch"
          - "minor"
          - "major"
      debug:
        description: "Enable SSH debugging"
        required: false
        default: false
        type: boolean

jobs:
  version_bump:
    if: github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    permissions:
      contents: write

    outputs:
      hasNewGemVersion: ${{ steps.current_version.outputs.GEM_VERSION }} != ${{ steps.new_version.outputs.GEM_VERSION }}

    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - if: ${{ inputs.debug }}
        name: Setup SSH session
        uses: lhotari/action-upterm@v1
        with:
          ## limits ssh access and adds the ssh public keys of the listed GitHub users
          limit-access-to-users: ncphillips,chrisdmacrae

      - name: Get current version
        id: current_version
        run: echo "CURRENT_VERSION=$(bin/bundle exec bin/version print)" >> $GITHUB_OUTPUT

      - name: Automated Version Bump (Ruby)
        run: |
          mv .bundle .bundle.bak
          bin/bundle
          bin/bundle exec bin/version bump ${{ inputs.releaseType }}
          rm -rf .bundle
          mv .bundle.bak .bundle

      - name: Get new version
        id: new_version
        run: echo "NEW_VERSION=$(bin/bundle exec bin/version print)" >> $GITHUB_OUTPUT

      - if: "${{ steps.current_version.outputs.CURRENT_VERSION }} != ${{ steps.new_version.outputs.NEW_VERSION }}"
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore(ci): update Gem version to ${{ steps.new_version.outputs.NEW_VERSION }}"
          file_pattern: '(Gemfile.lock|lib/hot_view_components/version.rb)'

      - if: "${{ steps.current_version.outputs.CURRENT_VERSION }} != ${{ steps.new_version.outputs.NEW_VERSION }}"
        id: "tag_create"
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "${{ steps.new_version.outputs.NEW_VERSION }}"
          tag_exists_error: true
          message: "chore(ci): bump version to ${{ steps.new_version.outputs.NEW_VERSION }}"

      - if: "${{ steps.current_version.outputs.CURRENT_VERSION }} != ${{ steps.new_version.outputs.NEW_VERSION }}"
        run: |
          echo "Tag created: ${{ steps.tag_create.outputs.tag_exists }}"

  release_to_github_packages:
    needs: version_bump
    if: ${{ needs.version_bump.outputs.hasNewGemVersion }} == true
    uses: pmfit/hot_view_components/.github/workflows/release-github.yml@main
    with:
      debug: ${{ inputs.debug }}

